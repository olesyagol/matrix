
import java.awt.Color;
import java.io.IOException;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dmitry
 */
public class KiTPO_98 extends javax.swing.JFrame {

    /**
     * Creates new form KiTPO_98
     */
    public KiTPO_98() {
        initComponents();
        
        jScrollPane_matrix.setColumnHeaderView(null);
        jTable_matrix.setShowGrid(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_matrixCreation = new javax.swing.JDialog();
        jPanel_create = new javax.swing.JPanel();
        filler_create1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler_create2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler_create3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jButton_create = new javax.swing.JButton();
        jPanel_matrixOrder = new javax.swing.JPanel();
        jLabel_matrixOrder = new javax.swing.JLabel();
        jTextField_matrixOrder = new javax.swing.JTextField();
        jPanel_main = new javax.swing.JPanel();
        jScrollPane_matrix = new javax.swing.JScrollPane();
        jTable_matrix = new javax.swing.JTable();
        jPanel_information = new javax.swing.JPanel();
        filler_information1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jLabel_matrixOrderInfo = new javax.swing.JLabel();
        jTextField_matrixOrderInfo = new javax.swing.JTextField();
        filler_information2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jLabel_selectedCellInfo = new javax.swing.JLabel();
        jTextField_selectedCellInfo = new javax.swing.JTextField();
        jMenuBar_main = new javax.swing.JMenuBar();
        jMenu_file = new javax.swing.JMenu();
        jMenuItem_loadFile = new javax.swing.JMenuItem();
        jMenuItem_saveFile = new javax.swing.JMenuItem();
        jSeparator_file1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_exit = new javax.swing.JMenuItem();
        jMenu_matrix = new javax.swing.JMenu();
        jMenuItem_create = new javax.swing.JMenuItem();
        jMenuItem_rotate = new javax.swing.JMenuItem();
        jSeparator_matrix1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_randomFilling = new javax.swing.JMenuItem();
        jMenuItem_clearing = new javax.swing.JMenuItem();

        jDialog_matrixCreation.setTitle("Создание матрицы");
        jDialog_matrixCreation.setLocationByPlatform(true);
        jDialog_matrixCreation.setModal(true);
        jDialog_matrixCreation.setResizable(false);
        jDialog_matrixCreation.setSize(new java.awt.Dimension(400, 125));

        jPanel_create.setLayout(new java.awt.GridLayout(1, 0));
        jPanel_create.add(filler_create1);
        jPanel_create.add(filler_create2);
        jPanel_create.add(filler_create3);

        jButton_create.setText("Создать");
        jButton_create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_createActionPerformed(evt);
            }
        });
        jPanel_create.add(jButton_create);

        jPanel_matrixOrder.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_matrixOrder.setLayout(new java.awt.GridLayout(1, 0));

        jLabel_matrixOrder.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_matrixOrder.setText("Укажите порядок матрицы:");
        jPanel_matrixOrder.add(jLabel_matrixOrder);

        jTextField_matrixOrder.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_matrixOrder.setToolTipText("Значение порядка должно быть не меньше 1 и не больше 100");
        jPanel_matrixOrder.add(jTextField_matrixOrder);

        javax.swing.GroupLayout jDialog_matrixCreationLayout = new javax.swing.GroupLayout(jDialog_matrixCreation.getContentPane());
        jDialog_matrixCreation.getContentPane().setLayout(jDialog_matrixCreationLayout);
        jDialog_matrixCreationLayout.setHorizontalGroup(
            jDialog_matrixCreationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_matrixCreationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog_matrixCreationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_create, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jPanel_matrixOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDialog_matrixCreationLayout.setVerticalGroup(
            jDialog_matrixCreationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_matrixCreationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_matrixOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(jPanel_create, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("КиТПО / Matrix98");
        setLocationByPlatform(true);
        setResizable(false);
        setSize(new java.awt.Dimension(600, 450));

        jScrollPane_matrix.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane_matrix.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable_matrix.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable_matrix.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable_matrix.setRowSelectionAllowed(false);
        jTable_matrix.getTableHeader().setResizingAllowed(false);
        jTable_matrix.getTableHeader().setReorderingAllowed(false);
        jTable_matrix.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_matrixMouseClicked(evt);
            }
        });
        jScrollPane_matrix.setViewportView(jTable_matrix);

        javax.swing.GroupLayout jPanel_mainLayout = new javax.swing.GroupLayout(jPanel_main);
        jPanel_main.setLayout(jPanel_mainLayout);
        jPanel_mainLayout.setHorizontalGroup(
            jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane_matrix, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel_mainLayout.setVerticalGroup(
            jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane_matrix, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel_information.setLayout(new java.awt.GridLayout(2, 3));
        jPanel_information.add(filler_information1);

        jLabel_matrixOrderInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel_matrixOrderInfo.setText("Порядок матрицы:");
        jPanel_information.add(jLabel_matrixOrderInfo);

        jTextField_matrixOrderInfo.setEditable(false);
        jTextField_matrixOrderInfo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel_information.add(jTextField_matrixOrderInfo);
        jPanel_information.add(filler_information2);

        jLabel_selectedCellInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel_selectedCellInfo.setText("Позиция выбранного элемента:");
        jPanel_information.add(jLabel_selectedCellInfo);

        jTextField_selectedCellInfo.setEditable(false);
        jTextField_selectedCellInfo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel_information.add(jTextField_selectedCellInfo);

        jMenu_file.setText("Файл");

        jMenuItem_loadFile.setText("Загрузить файл");
        jMenuItem_loadFile.setToolTipText("");
        jMenuItem_loadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_loadFileActionPerformed(evt);
            }
        });
        jMenu_file.add(jMenuItem_loadFile);

        jMenuItem_saveFile.setText("Сохранить файл");
        jMenuItem_saveFile.setEnabled(false);
        jMenuItem_saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_saveFileActionPerformed(evt);
            }
        });
        jMenu_file.add(jMenuItem_saveFile);
        jMenu_file.add(jSeparator_file1);

        jMenuItem_exit.setText("Выход");
        jMenuItem_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_exitActionPerformed(evt);
            }
        });
        jMenu_file.add(jMenuItem_exit);

        jMenuBar_main.add(jMenu_file);

        jMenu_matrix.setText("Матрица");

        jMenuItem_create.setText("Создать");
        jMenuItem_create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_createActionPerformed(evt);
            }
        });
        jMenu_matrix.add(jMenuItem_create);

        jMenuItem_rotate.setText("Повернуть на 180 градусов");
        jMenuItem_rotate.setEnabled(false);
        jMenuItem_rotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_rotateActionPerformed(evt);
            }
        });
        jMenu_matrix.add(jMenuItem_rotate);
        jMenu_matrix.add(jSeparator_matrix1);

        jMenuItem_randomFilling.setText("Заполнить случайным образом");
        jMenuItem_randomFilling.setEnabled(false);
        jMenuItem_randomFilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_randomFillingActionPerformed(evt);
            }
        });
        jMenu_matrix.add(jMenuItem_randomFilling);

        jMenuItem_clearing.setText("Очистить");
        jMenuItem_clearing.setEnabled(false);
        jMenuItem_clearing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_clearingActionPerformed(evt);
            }
        });
        jMenu_matrix.add(jMenuItem_clearing);

        jMenuBar_main.add(jMenu_matrix);

        setJMenuBar(jMenuBar_main);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_information, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_information, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_exitActionPerformed
        // TODO add your handling code here:
        jDialog_matrixCreation.dispose();
        this.dispose();
    }//GEN-LAST:event_jMenuItem_exitActionPerformed

    private void jMenuItem_createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_createActionPerformed
        // TODO add your handling code here:
        jDialog_matrixCreation.setVisible(true);
    }//GEN-LAST:event_jMenuItem_createActionPerformed

    Matrix matrix;
    
    private void jButton_createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_createActionPerformed
        // TODO add your handling code here:
        boolean isCorrect = true;
        
        matrix = null;
        
        try
        {
            String matrixOrder = jTextField_matrixOrder.getText();
            matrix = new Matrix(matrixOrder);
        } // try
        catch(MyException exception)
        {
            isCorrect = false;
        } // catch
        
        if (!isCorrect)
        {
            return;
        } // if
        
        jDialog_matrixCreation.setVisible(false);
        
        DefaultTableModel model = (DefaultTableModel)jTable_matrix.getModel();
        
        int matrixOrder = matrix.getMatrixOrder();
        jTextField_matrixOrderInfo.setText(Integer.toString(matrixOrder));
        jTextField_selectedCellInfo.setText("");
        
        model.setColumnCount(matrixOrder);
        for (int i = 0; i < matrixOrder; i++)
        {
            jTable_matrix.getColumnModel().getColumn(i).setPreferredWidth(64);
        } // for
        
        model.setRowCount(matrixOrder);
        
        for (int i = 0; i < matrixOrder; i++)
        {
            for (int j = 0; j < matrixOrder; j++)
            {
                jTable_matrix.setValueAt(0, i, j);
            } // for
        } // for
        
        jMenuItem_saveFile.setEnabled(true);
        
        jMenuItem_rotate.setEnabled(true);
        jMenuItem_randomFilling.setEnabled(true);
        jMenuItem_clearing.setEnabled(true);
    }//GEN-LAST:event_jButton_createActionPerformed

    private void jTable_matrixMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_matrixMouseClicked
        // TODO add your handling code here:
        jTextField_selectedCellInfo.setText("(" + (jTable_matrix.getSelectedRow() + 1) 
                + ";" + (jTable_matrix.getSelectedColumn() + 1) + ")");
    }//GEN-LAST:event_jTable_matrixMouseClicked

    private void jMenuItem_randomFillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_randomFillingActionPerformed
        // TODO add your handling code here:
        int matrixOrder = matrix.getMatrixOrder();
        
        Random random = new Random();        
        for (int i = 0; i < matrixOrder; i++)
        {
            for (int j = 0; j < matrixOrder; j++)
            {
                int randomNumber = random.nextInt(101);
                jTable_matrix.setValueAt(randomNumber, i, j);
            } // for
        } // for
    }//GEN-LAST:event_jMenuItem_randomFillingActionPerformed

    private void jMenuItem_clearingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_clearingActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTable_matrix.getModel();
        
        while(model.getRowCount() > 0)
        {
            model.removeRow(0);
        } // while
        
        jMenuItem_saveFile.setEnabled(false);
        
        jMenuItem_rotate.setEnabled(false);
        jMenuItem_randomFilling.setEnabled(false);
        jMenuItem_clearing.setEnabled(false);
    }//GEN-LAST:event_jMenuItem_clearingActionPerformed

    private void jMenuItem_rotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_rotateActionPerformed
        // TODO add your handling code here:
        int matrixOrder = matrix.getMatrixOrder();
        int nIterations = matrixOrder;
        
        if (nIterations % 2 == 1)
        {
            nIterations++;
        } // if
        
        nIterations /= 2;
        
        String temporary = "";
        for (int i = 0; i < nIterations; i++)
        {
            for (int j = 0; j < matrixOrder; j++)
            {
                if (i == nIterations - 1 && j == nIterations && matrixOrder % 2 == 1)
                {
                    break;
                } // if
                
                temporary = String.valueOf(jTable_matrix.getValueAt(i, j));
                jTable_matrix.setValueAt(jTable_matrix.getValueAt(matrixOrder - i - 1, matrixOrder - j - 1), i, j);
                jTable_matrix.setValueAt(temporary, matrixOrder - i - 1, matrixOrder - j - 1);
            } // for
        } // for
    }//GEN-LAST:event_jMenuItem_rotateActionPerformed

    private void jMenuItem_loadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_loadFileActionPerformed
        // TODO add your handling code here:
        FileManager fm = new FileManager();
        
        DefaultTableModel model = (DefaultTableModel)jTable_matrix.getModel();
        
        while(model.getRowCount() > 0)
        {
            model.removeRow(0);
        } // while
        
        try
        {
            fm.loadTextFile(jTable_matrix);
        } // try
        catch (IOException|MyException exception)
        {
            return;
        } // catch
        
        jMenuItem_saveFile.setEnabled(true);
        
        jMenuItem_rotate.setEnabled(true);
        jMenuItem_randomFilling.setEnabled(true);
        jMenuItem_clearing.setEnabled(true);
    }//GEN-LAST:event_jMenuItem_loadFileActionPerformed

    private void jMenuItem_saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_saveFileActionPerformed
        // TODO add your handling code here:
        FileManager fm = new FileManager();
        
        try
        {
            fm.saveTextFile(jTable_matrix);
        } // try
        catch (IOException|MyException exception)
        {
            return;
        } // catch
    }//GEN-LAST:event_jMenuItem_saveFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KiTPO_98.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KiTPO_98.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KiTPO_98.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KiTPO_98.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KiTPO_98().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler_create1;
    private javax.swing.Box.Filler filler_create2;
    private javax.swing.Box.Filler filler_create3;
    private javax.swing.Box.Filler filler_information1;
    private javax.swing.Box.Filler filler_information2;
    private javax.swing.JButton jButton_create;
    private javax.swing.JDialog jDialog_matrixCreation;
    private javax.swing.JLabel jLabel_matrixOrder;
    private javax.swing.JLabel jLabel_matrixOrderInfo;
    private javax.swing.JLabel jLabel_selectedCellInfo;
    private javax.swing.JMenuBar jMenuBar_main;
    private javax.swing.JMenuItem jMenuItem_clearing;
    private javax.swing.JMenuItem jMenuItem_create;
    private javax.swing.JMenuItem jMenuItem_exit;
    private javax.swing.JMenuItem jMenuItem_loadFile;
    private javax.swing.JMenuItem jMenuItem_randomFilling;
    private javax.swing.JMenuItem jMenuItem_rotate;
    private javax.swing.JMenuItem jMenuItem_saveFile;
    private javax.swing.JMenu jMenu_file;
    private javax.swing.JMenu jMenu_matrix;
    private javax.swing.JPanel jPanel_create;
    private javax.swing.JPanel jPanel_information;
    private javax.swing.JPanel jPanel_main;
    private javax.swing.JPanel jPanel_matrixOrder;
    private javax.swing.JScrollPane jScrollPane_matrix;
    private javax.swing.JPopupMenu.Separator jSeparator_file1;
    private javax.swing.JPopupMenu.Separator jSeparator_matrix1;
    private javax.swing.JTable jTable_matrix;
    private javax.swing.JTextField jTextField_matrixOrder;
    private javax.swing.JTextField jTextField_matrixOrderInfo;
    private javax.swing.JTextField jTextField_selectedCellInfo;
    // End of variables declaration//GEN-END:variables
}
